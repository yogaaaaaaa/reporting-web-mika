function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=e(require("jsep")),n=function e(r,n){try{var u,a=r;switch(a.type){case"ArrayExpression":return Promise.resolve(o(a.elements,n));case"BinaryExpression":return Promise.resolve(Promise.all([e(a.left,n),e(a.right,n)])).then(function(e){return i[a.operator](e[0],e[1])});case"CallExpression":var c,l,f,p=function(){if("function"==typeof l){var e=l,r=e.apply,t=c;return Promise.resolve(o(a.arguments,n)).then(function(n){return Promise.resolve(r.call(e,t,n))})}},m="MemberExpression"===a.callee.type?Promise.resolve(t(a.callee,n)).then(function(e){c=(f=e)[0],l=f[1]}):Promise.resolve(e(a.callee,n)).then(function(e){l=e});return Promise.resolve(m&&m.then?m.then(p):p());case"ConditionalExpression":return Promise.resolve(e(a.test,n)).then(function(r){return Promise.resolve(e(r?a.consequent:a.alternate,n))});case"Identifier":return Promise.resolve(n[a.name]);case"Literal":return Promise.resolve(a.value);case"LogicalExpression":var v=function(r){return u?r:Promise.resolve(Promise.all([e(a.left,n),e(a.right,n)])).then(function(e){return i[a.operator](e[0],e[1])})},h="||"===a.operator?(u=1,Promise.resolve(e(a.left,n)).then(function(r){return r||Promise.resolve(e(a.right,n))})):function(){if("&&"===a.operator)return u=1,Promise.resolve(e(a.left,n)).then(function(r){return r?Promise.resolve(e(a.right,n)):r})}();return Promise.resolve(h&&h.then?h.then(v):v(h));case"MemberExpression":return Promise.resolve(t(a,n)).then(function(e){return e[1]});case"ThisExpression":return Promise.resolve(n);case"UnaryExpression":var P=s[a.operator];return Promise.resolve(e(a.argument,n)).then(function(e){return P.call(s,e)});default:return Promise.resolve(void 0)}}catch(e){return Promise.reject(e)}},t=function(e,r){try{return Promise.resolve(n(e.object,r)).then(function(t){return e.computed?Promise.resolve(n(e.property,r)).then(function(e){return[t,t[e]]}):[t,t[e.property.name]]})}catch(e){return Promise.reject(e)}},o=function(e,r){try{return Promise.resolve(Promise.all(e.map(function(e){return n(e,r)})))}catch(e){return Promise.reject(e)}},u={"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":10,"/":10,"%":10},i={"||":function(e,r){return e||r},"&&":function(e,r){return e&&r},"|":function(e,r){return e|r},"^":function(e,r){return e^r},"&":function(e,r){return e&r},"==":function(e,r){return e==r},"!=":function(e,r){return e!=r},"===":function(e,r){return e===r},"!==":function(e,r){return e!==r},"<":function(e,r){return e<r},">":function(e,r){return e>r},"<=":function(e,r){return e<=r},">=":function(e,r){return e>=r},"<<":function(e,r){return e<<r},">>":function(e,r){return e>>r},">>>":function(e,r){return e>>>r},"+":function(e,r){return e+r},"-":function(e,r){return e-r},"*":function(e,r){return e*r},"/":function(e,r){return e/r},"%":function(e,r){return e%r}},s={"-":function(e){return-e},"+":function(e){return+e},"~":function(e){return~e},"!":function(e){return!e}};function a(e,r){return e.map(function(e){return l(e,r)})}function c(e,r){var n=l(e.object,r);return e.computed?[n,n[l(e.property,r)]]:[n,n[e.property.name]]}function l(e,r){var n=e;switch(n.type){case"ArrayExpression":return a(n.elements,r);case"BinaryExpression":return i[n.operator](l(n.left,r),l(n.right,r));case"CallExpression":var t,o,u;if("MemberExpression"===n.callee.type?(t=(u=c(n.callee,r))[0],o=u[1]):o=l(n.callee,r),"function"!=typeof o)return;return o.apply(t,a(n.arguments,r));case"ConditionalExpression":return l(n.test,r)?l(n.consequent,r):l(n.alternate,r);case"Identifier":return r[n.name];case"Literal":return n.value;case"LogicalExpression":return"||"===n.operator?l(n.left,r)||l(n.right,r):"&&"===n.operator?l(n.left,r)&&l(n.right,r):i[n.operator](l(n.left,r),l(n.right,r));case"MemberExpression":return c(n,r)[1];case"ThisExpression":return r;case"UnaryExpression":return s[n.operator](l(n.argument,r));default:return}}Object.defineProperty(exports,"parse",{enumerable:!0,get:function(){return r.default}}),exports.addBinaryOp=function(e,n,t){t?(r.default.addBinaryOp(e,n),i[e]=t):(r.default.addBinaryOp(e,u[e]||1),i[e]=n)},exports.addUnaryOp=function(e,n){r.default.addUnaryOp(e),s[e]=n},exports.compile=function(e){return l.bind(null,r.default(e))},exports.compileAsync=function(e){return n.bind(null,r.default(e))},exports.eval=l,exports.evalAsync=n;
//# sourceMappingURL=expression-eval.js.map
