import e from"jsep";export{default as parse}from"jsep";var r=function e(r,o){try{var s,c=r;switch(c.type){case"ArrayExpression":return Promise.resolve(t(c.elements,o));case"BinaryExpression":return Promise.resolve(Promise.all([e(c.left,o),e(c.right,o)])).then(function(e){return u[c.operator](e[0],e[1])});case"CallExpression":var a,l,f,p=function(){if("function"==typeof l){var e=l,r=e.apply,n=a;return Promise.resolve(t(c.arguments,o)).then(function(t){return Promise.resolve(r.call(e,n,t))})}},m="MemberExpression"===c.callee.type?Promise.resolve(n(c.callee,o)).then(function(e){a=(f=e)[0],l=f[1]}):Promise.resolve(e(c.callee,o)).then(function(e){l=e});return Promise.resolve(m&&m.then?m.then(p):p());case"ConditionalExpression":return Promise.resolve(e(c.test,o)).then(function(r){return Promise.resolve(e(r?c.consequent:c.alternate,o))});case"Identifier":return Promise.resolve(o[c.name]);case"Literal":return Promise.resolve(c.value);case"LogicalExpression":var v=function(r){return s?r:Promise.resolve(Promise.all([e(c.left,o),e(c.right,o)])).then(function(e){return u[c.operator](e[0],e[1])})},h="||"===c.operator?(s=1,Promise.resolve(e(c.left,o)).then(function(r){return r||Promise.resolve(e(c.right,o))})):function(){if("&&"===c.operator)return s=1,Promise.resolve(e(c.left,o)).then(function(r){return r?Promise.resolve(e(c.right,o)):r})}();return Promise.resolve(h&&h.then?h.then(v):v(h));case"MemberExpression":return Promise.resolve(n(c,o)).then(function(e){return e[1]});case"ThisExpression":return Promise.resolve(o);case"UnaryExpression":var P=i[c.operator];return Promise.resolve(e(c.argument,o)).then(function(e){return P.call(i,e)});default:return Promise.resolve(void 0)}}catch(e){return Promise.reject(e)}},n=function(e,n){try{return Promise.resolve(r(e.object,n)).then(function(t){return e.computed?Promise.resolve(r(e.property,n)).then(function(e){return[t,t[e]]}):[t,t[e.property.name]]})}catch(e){return Promise.reject(e)}},t=function(e,n){try{return Promise.resolve(Promise.all(e.map(function(e){return r(e,n)})))}catch(e){return Promise.reject(e)}},o={"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":10,"/":10,"%":10},u={"||":function(e,r){return e||r},"&&":function(e,r){return e&&r},"|":function(e,r){return e|r},"^":function(e,r){return e^r},"&":function(e,r){return e&r},"==":function(e,r){return e==r},"!=":function(e,r){return e!=r},"===":function(e,r){return e===r},"!==":function(e,r){return e!==r},"<":function(e,r){return e<r},">":function(e,r){return e>r},"<=":function(e,r){return e<=r},">=":function(e,r){return e>=r},"<<":function(e,r){return e<<r},">>":function(e,r){return e>>r},">>>":function(e,r){return e>>>r},"+":function(e,r){return e+r},"-":function(e,r){return e-r},"*":function(e,r){return e*r},"/":function(e,r){return e/r},"%":function(e,r){return e%r}},i={"-":function(e){return-e},"+":function(e){return+e},"~":function(e){return~e},"!":function(e){return!e}};function s(e,r){return e.map(function(e){return a(e,r)})}function c(e,r){var n=a(e.object,r);return e.computed?[n,n[a(e.property,r)]]:[n,n[e.property.name]]}function a(e,r){var n=e;switch(n.type){case"ArrayExpression":return s(n.elements,r);case"BinaryExpression":return u[n.operator](a(n.left,r),a(n.right,r));case"CallExpression":var t,o,l;if("MemberExpression"===n.callee.type?(t=(l=c(n.callee,r))[0],o=l[1]):o=a(n.callee,r),"function"!=typeof o)return;return o.apply(t,s(n.arguments,r));case"ConditionalExpression":return a(n.test,r)?a(n.consequent,r):a(n.alternate,r);case"Identifier":return r[n.name];case"Literal":return n.value;case"LogicalExpression":return"||"===n.operator?a(n.left,r)||a(n.right,r):"&&"===n.operator?a(n.left,r)&&a(n.right,r):u[n.operator](a(n.left,r),a(n.right,r));case"MemberExpression":return c(n,r)[1];case"ThisExpression":return r;case"UnaryExpression":return i[n.operator](a(n.argument,r));default:return}}function l(r){return a.bind(null,e(r))}function f(n){return r.bind(null,e(n))}function p(r,n){e.addUnaryOp(r),i[r]=n}function m(r,n,t){t?(e.addBinaryOp(r,n),u[r]=t):(e.addBinaryOp(r,o[r]||1),u[r]=n)}export{m as addBinaryOp,p as addUnaryOp,l as compile,f as compileAsync,a as eval,r as evalAsync};
//# sourceMappingURL=expression-eval.module.js.map
